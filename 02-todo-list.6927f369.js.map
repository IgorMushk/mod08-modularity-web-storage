{"mappings":"IAkBAA,EAAe,C,eAlBQ,CAACC,EAAKC,KAC3B,IACE,MAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,kBAItBT,IACrB,IACE,MAAME,EAAkBG,aAAaK,QAAQV,GAC7C,OAA2B,OAApBE,OAA2BS,EAAYR,KAAKS,MAAMV,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,ICNa,MAApDI,EAAeC,SAASC,cAAc,SACtCC,EAAgBF,SAASC,cAAc,YACvCE,EAAcH,SAASC,cAAc,SAI3CC,EAAcE,iBAAiB,SAoC/B,WACE,IAAKL,EAAaZ,MAChB,OAAOkB,MAAM,6BAGf,MAAMC,EAAUC,KAAKC,MACfC,EAAe,0BACAH,YACjBP,EAAaZ,kDAEjBgB,EAAYO,mBAAmB,YAAaD,GAC5CE,EAASC,KAAK,CACZC,GAAIC,OAAOR,GACXS,KAAMhB,EAAaZ,MACnB6B,MAAM,IAKR/B,EAASgC,eAAe,WAAYN,GACpCZ,EAAaZ,MAAQ,E,IAvDvBgB,EAAYC,iBAAiB,SAe1B,SAAuBc,GAE8B,GAAlDA,EAAMC,OAAOC,UAAUC,SAAS,SAAU,CAGc,MAApDC,EAAeJ,EAAMC,OAAOI,cAAcC,QAAQC,SACxDd,EAAWA,EAASe,QAAOC,GAAQA,EAAKd,KAAOS,IAC/CrC,EAASgC,eAAe,WAAYN,GACpCO,EAAMC,OAAOI,cAAcK,Q,MACtB,GAA6B,OAAzBV,EAAMC,OAAOU,QAAkB,CAExCX,EAAMC,OAAOC,UAAUU,OAAO,WAC9B,MAAMC,EAAcpB,EAASqB,WAC3BL,GAAQA,EAAKd,KAAOK,EAAMC,OAAOK,QAAQC,WAE3Cd,EAASoB,GAAaf,MAAQL,EAASoB,GAAaf,KACpD/B,EAASgC,eAAe,WAAYN,E,KA5BxC,IAAIA,EAAW1B,EAASgD,eAAe,aAAe,GAGtD,GAFAvC,QAAQwC,IAAIvB,GAERA,EAASwB,OAAQ,CACnB,MAAMC,EAAmBzB,EAAS0B,KAAIV,GAC7B,cAAcA,EAAKX,KAAO,UAAY,wBAC3CW,EAAKd,OACFc,EAAKZ,8CAEZZ,EAAYO,mBAAmB,YAAa0B,EAAiBE,KAAK,I","sources":["src/helpers/storage.js","src/js/todo-list.js"],"sourcesContent":["const setStorageData = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst getStorageData = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport default {\n  setStorageData,\n  getStorageData,\n};\n","// -1- import { getStorageData, setStorageData } from '../helpers/storage';\nimport storage2 from '../helpers/storage';\n\n// https://www.youtube.com/watch?v=RG-gek5nXLI&t=4240s\n// Завдання\n// Написати to-do-list де можна створювати,\n// видаляти елементи та реалізувати збереження списку в локал сторедж\n\nconst inputElement = document.querySelector('input');\nconst buttonElement = document.querySelector('.add-btn');\nconst listElement = document.querySelector('.list');\n//console.log(inputElement);\n//console.log(listElement);\n\nbuttonElement.addEventListener('click', addNewItem);\nlistElement.addEventListener('click', listHandlerClick);\n\n//let listData = [];\nlet listData = storage2.getStorageData('toDoList') || [];\nconsole.log(listData);\n\nif (listData.length) {\n  const itemsTemplateArr = listData.map(item => {\n    return `<li class=\"${item.done ? 'checked' : null}\" data-identity=\"${\n      item.id\n    }\">${item.text}<span class=\"close\">&#215</span></li>`;\n  });\n  listElement.insertAdjacentHTML('beforeend', itemsTemplateArr.join(''));\n} // null или \"\" -> item.done ? 'checked' : null\n\nfunction listHandlerClick(event) {\n  // В зависимости где произошел клик или удаяем или чекаем эллемент\n  if (event.target.classList.contains('close')) {\n    // Если клик на x удаляеи эллемент с данный, обновляем локалсторедж и на экране\n    // делаем не через поиск по Id как при чеке, а через фильтр т.к. эллементов мало\n    const itemIdentify = event.target.parentElement.dataset.identity;\n    listData = listData.filter(item => item.id !== itemIdentify);\n    storage2.setStorageData('toDoList', listData);\n    event.target.parentElement.remove();\n  } else if (event.target.tagName === 'LI') {\n    // Если кликаем не на x а на элемент списк нужно  его чекнуть (отметить или снять отметку)\n    event.target.classList.toggle('checked');\n    const targetIndex = listData.findIndex(\n      item => item.id === event.target.dataset.identity\n    );\n    listData[targetIndex].done = !listData[targetIndex].done;\n    storage2.setStorageData('toDoList', listData);\n  }\n}\n\nfunction addNewItem() {\n  if (!inputElement.value) {\n    return alert('You must write something!');\n  }\n\n  const dateNow = Date.now();\n  const itemTemplate = `\n  <li data-identity=\"${dateNow}\">\n    ${inputElement.value} <span class=\"close\">&#215</span>\n  </li>`;\n  listElement.insertAdjacentHTML('beforeend', itemTemplate);\n  listData.push({\n    id: String(dateNow),\n    text: inputElement.value,\n    done: false,\n  });\n  // -1- setStorageData('toDoList', listData);\n  // -error- todo-list.js:30 Uncaught TypeError: (0 , _storage.setStorageData) is not a function\n  //  at HTMLSpanElement.addNewItem (todo-list.js:30:17)\n  storage2.setStorageData('toDoList', listData);\n  inputElement.value = '';\n}\n"],"names":["$c89a5468278c8bea$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","$a7befd106d354c8c$var$inputElement","document","querySelector","$a7befd106d354c8c$var$buttonElement","$a7befd106d354c8c$var$listElement","addEventListener","alert","dateNow","Date","now","itemTemplate","insertAdjacentHTML","$a7befd106d354c8c$var$listData","push","id","String","text","done","setStorageData","event","target","classList","contains","itemIdentify","parentElement","dataset","identity","filter","item","remove","tagName","toggle","targetIndex","findIndex","getStorageData","log","length","itemsTemplateArr","map","join"],"version":3,"file":"02-todo-list.6927f369.js.map"}